{"ast":null,"code":"import { useEffect as $hPSQ5$useEffect } from \"react\";\nimport { useCallbackRef as $hPSQ5$useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\n/**\n * Listens for when the escape key is down\n */\n\nfunction $addc16e1bbe58fd0$export$3a72a57244d6e765(onEscapeKeyDownProp) {\n  let ownerDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalThis === null || globalThis === void 0 ? void 0 : globalThis.document;\n  const onEscapeKeyDown = $hPSQ5$useCallbackRef(onEscapeKeyDownProp);\n  $hPSQ5$useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') onEscapeKeyDown(event);\n    };\n\n    ownerDocument.addEventListener('keydown', handleKeyDown);\n    return () => ownerDocument.removeEventListener('keydown', handleKeyDown);\n  }, [onEscapeKeyDown, ownerDocument]);\n}\n\nexport { $addc16e1bbe58fd0$export$3a72a57244d6e765 as useEscapeKeydown }; //# sourceMappingURL=index.module.js.map","map":null,"metadata":{},"sourceType":"module"}