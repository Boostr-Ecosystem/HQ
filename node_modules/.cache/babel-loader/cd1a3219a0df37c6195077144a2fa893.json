{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCreateCallContractInstance = exports.getSignMessageLibContractInstance = exports.getSafeProxyFactoryContractInstance = exports.getMultiSendCallOnlyContractInstance = exports.getMultiSendContractInstance = exports.getCompatibilityFallbackHandlerContractInstance = exports.getSafeContractInstance = void 0;\n\nconst Gnosis_safe__factory_1 = require(\"../../typechain/src/ethers-v5/v1.0.0/factories/Gnosis_safe__factory\");\n\nconst Proxy_factory__factory_1 = require(\"../../typechain/src/ethers-v5/v1.0.0/factories/Proxy_factory__factory\");\n\nconst Gnosis_safe__factory_2 = require(\"../../typechain/src/ethers-v5/v1.1.1/factories/Gnosis_safe__factory\");\n\nconst Multi_send__factory_1 = require(\"../../typechain/src/ethers-v5/v1.1.1/factories/Multi_send__factory\");\n\nconst Proxy_factory__factory_2 = require(\"../../typechain/src/ethers-v5/v1.1.1/factories/Proxy_factory__factory\");\n\nconst Gnosis_safe__factory_3 = require(\"../../typechain/src/ethers-v5/v1.2.0/factories/Gnosis_safe__factory\");\n\nconst Compatibility_fallback_handler__factory_1 = require(\"../../typechain/src/ethers-v5/v1.3.0/factories/Compatibility_fallback_handler__factory\");\n\nconst Gnosis_safe__factory_4 = require(\"../../typechain/src/ethers-v5/v1.3.0/factories/Gnosis_safe__factory\");\n\nconst Multi_send_call_only__factory_1 = require(\"../../typechain/src/ethers-v5/v1.3.0/factories/Multi_send_call_only__factory\");\n\nconst Multi_send__factory_2 = require(\"../../typechain/src/ethers-v5/v1.3.0/factories/Multi_send__factory\");\n\nconst Proxy_factory__factory_3 = require(\"../../typechain/src/ethers-v5/v1.3.0/factories/Proxy_factory__factory\");\n\nconst Sign_message_lib__factory_1 = require(\"../../typechain/src/ethers-v5/v1.3.0/factories/Sign_message_lib__factory\");\n\nconst Create_call__factory_1 = require(\"./../../typechain/src/ethers-v5/v1.3.0/factories/Create_call__factory\");\n\nconst CompatibilityFallbackHandler_V1_3_0_Ethers_1 = __importDefault(require(\"./CompatibilityFallbackHandler/v1.3.0/CompatibilityFallbackHandler_V1_3_0_Ethers\"));\n\nconst CreateCallEthersContract_V1_3_0_Ethers_1 = __importDefault(require(\"./CreateCall/v1.3.0/CreateCallEthersContract_V1_3_0_Ethers\"));\n\nconst GnosisSafeContract_V1_0_0_Ethers_1 = __importDefault(require(\"./GnosisSafe/v1.0.0/GnosisSafeContract_V1_0_0_Ethers\"));\n\nconst GnosisSafeContract_V1_1_1_Ethers_1 = __importDefault(require(\"./GnosisSafe/v1.1.1/GnosisSafeContract_V1_1_1_Ethers\"));\n\nconst GnosisSafeContract_V1_2_0_Ethers_1 = __importDefault(require(\"./GnosisSafe/v1.2.0/GnosisSafeContract_V1_2_0_Ethers\"));\n\nconst GnosisSafeContract_V1_3_0_Ethers_1 = __importDefault(require(\"./GnosisSafe/v1.3.0/GnosisSafeContract_V1_3_0_Ethers\"));\n\nconst GnosisSafeProxyFactoryContract_V1_0_0_Ethers_1 = __importDefault(require(\"./GnosisSafeProxyFactory/v1.0.0/GnosisSafeProxyFactoryContract_V1_0_0_Ethers\"));\n\nconst GnosisSafeProxyFactoryContract_V1_1_1_Ethers_1 = __importDefault(require(\"./GnosisSafeProxyFactory/v1.1.1/GnosisSafeProxyFactoryContract_V1_1_1_Ethers\"));\n\nconst GnosisSafeProxyFactoryContract_V1_3_0_Ethers_1 = __importDefault(require(\"./GnosisSafeProxyFactory/v1.3.0/GnosisSafeProxyFactoryContract_V1_3_0_Ethers\"));\n\nconst MultiSendContract_V1_1_1_Ethers_1 = __importDefault(require(\"./MultiSend/v1.1.1/MultiSendContract_V1_1_1_Ethers\"));\n\nconst MultiSendContract_V1_3_0_Ethers_1 = __importDefault(require(\"./MultiSend/v1.3.0/MultiSendContract_V1_3_0_Ethers\"));\n\nconst MultiSendCallOnlyContract_V1_3_0_Ethers_1 = __importDefault(require(\"./MultiSendCallOnly/v1.3.0/MultiSendCallOnlyContract_V1_3_0_Ethers\"));\n\nconst SignMessageLibContract_V1_3_0_Ethers_1 = __importDefault(require(\"./SignMessageLib/v1.3.0/SignMessageLibContract_V1_3_0_Ethers\"));\n\nfunction getSafeContractInstance(safeVersion, contractAddress, signerOrProvider) {\n  let safeContract;\n\n  switch (safeVersion) {\n    case '1.3.0':\n      safeContract = Gnosis_safe__factory_4.Gnosis_safe__factory.connect(contractAddress, signerOrProvider);\n      return new GnosisSafeContract_V1_3_0_Ethers_1.default(safeContract);\n\n    case '1.2.0':\n      safeContract = Gnosis_safe__factory_3.Gnosis_safe__factory.connect(contractAddress, signerOrProvider);\n      return new GnosisSafeContract_V1_2_0_Ethers_1.default(safeContract);\n\n    case '1.1.1':\n      safeContract = Gnosis_safe__factory_2.Gnosis_safe__factory.connect(contractAddress, signerOrProvider);\n      return new GnosisSafeContract_V1_1_1_Ethers_1.default(safeContract);\n\n    case '1.0.0':\n      safeContract = Gnosis_safe__factory_1.Gnosis_safe__factory.connect(contractAddress, signerOrProvider);\n      return new GnosisSafeContract_V1_0_0_Ethers_1.default(safeContract);\n\n    default:\n      throw new Error('Invalid Safe version');\n  }\n}\n\nexports.getSafeContractInstance = getSafeContractInstance;\n\nfunction getCompatibilityFallbackHandlerContractInstance(safeVersion, contractAddress, signerOrProvider) {\n  let compatibilityFallbackHandlerContract;\n\n  switch (safeVersion) {\n    case '1.3.0':\n    case '1.2.0':\n    case '1.1.1':\n      compatibilityFallbackHandlerContract = Compatibility_fallback_handler__factory_1.Compatibility_fallback_handler__factory.connect(contractAddress, signerOrProvider);\n      return new CompatibilityFallbackHandler_V1_3_0_Ethers_1.default(compatibilityFallbackHandlerContract);\n\n    default:\n      throw new Error('Invalid Safe version');\n  }\n}\n\nexports.getCompatibilityFallbackHandlerContractInstance = getCompatibilityFallbackHandlerContractInstance;\n\nfunction getMultiSendContractInstance(safeVersion, contractAddress, signerOrProvider) {\n  let multiSendContract;\n\n  switch (safeVersion) {\n    case '1.3.0':\n      multiSendContract = Multi_send__factory_2.Multi_send__factory.connect(contractAddress, signerOrProvider);\n      return new MultiSendContract_V1_3_0_Ethers_1.default(multiSendContract);\n\n    case '1.2.0':\n    case '1.1.1':\n    case '1.0.0':\n      multiSendContract = Multi_send__factory_1.Multi_send__factory.connect(contractAddress, signerOrProvider);\n      return new MultiSendContract_V1_1_1_Ethers_1.default(multiSendContract);\n\n    default:\n      throw new Error('Invalid Safe version');\n  }\n}\n\nexports.getMultiSendContractInstance = getMultiSendContractInstance;\n\nfunction getMultiSendCallOnlyContractInstance(safeVersion, contractAddress, signerOrProvider) {\n  let multiSendCallOnlyContract;\n\n  switch (safeVersion) {\n    case '1.3.0':\n    case '1.2.0':\n    case '1.1.1':\n    case '1.0.0':\n      multiSendCallOnlyContract = Multi_send_call_only__factory_1.Multi_send_call_only__factory.connect(contractAddress, signerOrProvider);\n      return new MultiSendCallOnlyContract_V1_3_0_Ethers_1.default(multiSendCallOnlyContract);\n\n    default:\n      throw new Error('Invalid Safe version');\n  }\n}\n\nexports.getMultiSendCallOnlyContractInstance = getMultiSendCallOnlyContractInstance;\n\nfunction getSafeProxyFactoryContractInstance(safeVersion, contractAddress, signerOrProvider) {\n  let gnosisSafeProxyFactoryContract;\n\n  switch (safeVersion) {\n    case '1.3.0':\n      gnosisSafeProxyFactoryContract = Proxy_factory__factory_3.Proxy_factory__factory.connect(contractAddress, signerOrProvider);\n      return new GnosisSafeProxyFactoryContract_V1_3_0_Ethers_1.default(gnosisSafeProxyFactoryContract);\n\n    case '1.2.0':\n    case '1.1.1':\n      gnosisSafeProxyFactoryContract = Proxy_factory__factory_2.Proxy_factory__factory.connect(contractAddress, signerOrProvider);\n      return new GnosisSafeProxyFactoryContract_V1_1_1_Ethers_1.default(gnosisSafeProxyFactoryContract);\n\n    case '1.0.0':\n      gnosisSafeProxyFactoryContract = Proxy_factory__factory_1.Proxy_factory__factory.connect(contractAddress, signerOrProvider);\n      return new GnosisSafeProxyFactoryContract_V1_0_0_Ethers_1.default(gnosisSafeProxyFactoryContract);\n\n    default:\n      throw new Error('Invalid Safe version');\n  }\n}\n\nexports.getSafeProxyFactoryContractInstance = getSafeProxyFactoryContractInstance;\n\nfunction getSignMessageLibContractInstance(safeVersion, contractAddress, signerOrProvider) {\n  let signMessageLibContract;\n\n  switch (safeVersion) {\n    case '1.3.0':\n      signMessageLibContract = Sign_message_lib__factory_1.Sign_message_lib__factory.connect(contractAddress, signerOrProvider);\n      return new SignMessageLibContract_V1_3_0_Ethers_1.default(signMessageLibContract);\n\n    default:\n      throw new Error('Invalid Safe version');\n  }\n}\n\nexports.getSignMessageLibContractInstance = getSignMessageLibContractInstance;\n\nfunction getCreateCallContractInstance(safeVersion, contractAddress, signerOrProvider) {\n  let createCallContract;\n\n  switch (safeVersion) {\n    case '1.3.0':\n    case '1.2.0':\n    case '1.1.1':\n    case '1.0.0':\n      createCallContract = Create_call__factory_1.Create_call__factory.connect(contractAddress, signerOrProvider);\n      return new CreateCallEthersContract_V1_3_0_Ethers_1.default(createCallContract);\n\n    default:\n      throw new Error('Invalid Safe version');\n  }\n}\n\nexports.getCreateCallContractInstance = getCreateCallContractInstance; //# sourceMappingURL=contractInstancesEthers.js.map","map":null,"metadata":{},"sourceType":"script"}