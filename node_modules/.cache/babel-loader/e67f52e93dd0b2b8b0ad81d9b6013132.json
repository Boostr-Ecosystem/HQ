{"ast":null,"code":"'use strict'; // modified from https://github.com/es-shims/es6-shim\n\nvar objectKeys = require('object-keys');\n\nvar hasSymbols = require('has-symbols/shams')();\n\nvar callBound = require('call-bind/callBound');\n\nvar toObject = Object;\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null; // eslint-disable-next-line no-unused-vars\n\nmodule.exports = function assign(target, source1) {\n  if (target == null) {\n    throw new TypeError('target must be an object');\n  }\n\n  var to = toObject(target); // step 1\n\n  if (arguments.length === 1) {\n    return to; // step 2\n  }\n\n  for (var s = 1; s < arguments.length; ++s) {\n    var from = toObject(arguments[s]); // step 3.a.i\n    // step 3.a.ii:\n\n    var keys = objectKeys(from);\n    var getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);\n\n    if (getSymbols) {\n      var syms = getSymbols(from);\n\n      for (var j = 0; j < syms.length; ++j) {\n        var key = syms[j];\n\n        if ($propIsEnumerable(from, key)) {\n          $push(keys, key);\n        }\n      }\n    } // step 3.a.iii:\n\n\n    for (var i = 0; i < keys.length; ++i) {\n      var nextKey = keys[i];\n\n      if ($propIsEnumerable(from, nextKey)) {\n        // step 3.a.iii.2\n        var propValue = from[nextKey]; // step 3.a.iii.2.a\n\n        to[nextKey] = propValue; // step 3.a.iii.2.b\n      }\n    }\n  }\n\n  return to; // step 4\n};","map":null,"metadata":{},"sourceType":"script"}