{"ast":null,"code":"import { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { a as AbstractBrowserWallet } from '../../../../dist/base-26952412.browser.esm.js';\nexport { SafeSupportedChainsSet } from '../../../connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.browser.esm.js';\nimport '../../../../dist/classPrivateMethodGet-9d546189.browser.esm.js';\nimport '../../../../dist/checkPrivateRedeclaration-3aaaa21d.browser.esm.js';\nimport '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nimport 'ethers';\nimport 'eventemitter3';\nimport '@thirdweb-dev/chains';\nimport '../../../../dist/tw-connector-443c384d.browser.esm.js'; // re-export the connection args for convenience\n\nclass SafeWallet extends AbstractBrowserWallet {\n  get walletName() {\n    return \"Safe Wallet\";\n  }\n\n  constructor(options) {\n    super(SafeWallet.id, { ...options\n    });\n\n    _defineProperty(this, \"connector\", void 0);\n  }\n\n  async getConnector() {\n    if (!this.connector) {\n      const {\n        SafeConnector\n      } = await import('../../../connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.browser.esm.js');\n      this.connector = new SafeConnector();\n    }\n\n    return this.connector;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  async updateChains(chains) {// no op\n  }\n\n  async connect(connectOptions) {\n    // can't save params to storage because one of them is a class instance and can't be saved\n    return await super.connect({ ...connectOptions,\n      saveParams: false\n    });\n  }\n\n  getPersonalWallet() {\n    return this.connector?.personalWallet;\n  }\n\n}\n\n_defineProperty(SafeWallet, \"meta\", {\n  name: \"Safe\",\n  iconURL: \"ipfs://QmbbyxDDmmLQh8DzzeUR6X6B75bESsNUFmbdvS3ZsQ2pN1/SafeToken.svg\"\n});\n\n_defineProperty(SafeWallet, \"id\", \"Safe\");\n\nexport { SafeWallet };","map":null,"metadata":{},"sourceType":"module"}