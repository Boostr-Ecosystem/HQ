{"ast":null,"code":"import { a8 as BigNumberTransformSchema, a6 as BigNumberSchema, a7 as BigNumberishSchema, aa as AddressOrEnsSchema } from './watchTransactions-8ceed2d4.browser.esm.js';\nimport { z } from 'zod';\nimport { C as CommonNFTOutput, b as CommonNFTInput, N as NFTInputOrUriSchema, A as AmountSchema } from './QueryParams-7d9473b5.browser.esm.js';\nimport { GENERATED_ABI } from '@thirdweb-dev/generated-abis';\nconst PropertiesInput = z.object({}).catchall(z.union([BigNumberTransformSchema, z.unknown()]));\n/**\n * @internal\n */\n\nconst OptionalPropertiesInput = z.union([z.array(PropertiesInput), PropertiesInput]).optional();\n/**\n * @internal\n */\n\nconst EditionMetadataOutputSchema = z.object({\n  supply: BigNumberSchema,\n  metadata: CommonNFTOutput\n});\n/**\n * @internal\n */\n\nconst EditionMetadataWithOwnerOutputSchema = EditionMetadataOutputSchema.extend({\n  owner: z.string(),\n  quantityOwned: BigNumberSchema\n});\n/**\n * @internal\n */\n\nconst EditionMetadataInputSchema = z.object({\n  supply: BigNumberishSchema,\n  metadata: CommonNFTInput\n});\n/**\n * @internal\n */\n\nconst EditionMetadataInputOrUriSchema = z.object({\n  supply: BigNumberishSchema,\n  metadata: NFTInputOrUriSchema\n});\n/**\n * @public\n */\n\n/**\n * @internal\n */\n\nconst TokenMintInputSchema = z.object({\n  toAddress: AddressOrEnsSchema,\n  amount: AmountSchema\n});\n/**\n * @public\n */\n\nlet ProposalState = /*#__PURE__*/function (ProposalState) {\n  ProposalState[ProposalState[\"Pending\"] = 0] = \"Pending\";\n  ProposalState[ProposalState[\"Active\"] = 1] = \"Active\";\n  ProposalState[ProposalState[\"Canceled\"] = 2] = \"Canceled\";\n  ProposalState[ProposalState[\"Defeated\"] = 3] = \"Defeated\";\n  ProposalState[ProposalState[\"Succeeded\"] = 4] = \"Succeeded\";\n  ProposalState[ProposalState[\"Queued\"] = 5] = \"Queued\";\n  ProposalState[ProposalState[\"Expired\"] = 6] = \"Expired\";\n  ProposalState[ProposalState[\"Executed\"] = 7] = \"Executed\";\n  return ProposalState;\n}({});\n\nfunction getCachedAbiForContract(address) {\n  if (address in GENERATED_ABI) {\n    return GENERATED_ABI[address];\n  }\n\n  return undefined;\n}\n\nexport { EditionMetadataOutputSchema as E, OptionalPropertiesInput as O, ProposalState as P, TokenMintInputSchema as T, EditionMetadataWithOwnerOutputSchema as a, EditionMetadataInputSchema as b, EditionMetadataInputOrUriSchema as c, getCachedAbiForContract as g };","map":null,"metadata":{},"sourceType":"module"}