{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateTypedData = exports.getEip712MessageTypes = exports.EIP712_DOMAIN = exports.EIP712_DOMAIN_BEFORE_V130 = void 0;\n\nconst satisfies_1 = __importDefault(require(\"semver/functions/satisfies\"));\n\nconst EQ_OR_GT_1_3_0 = '>=1.3.0';\nexports.EIP712_DOMAIN_BEFORE_V130 = [{\n  type: 'address',\n  name: 'verifyingContract'\n}];\nexports.EIP712_DOMAIN = [{\n  type: 'uint256',\n  name: 'chainId'\n}, {\n  type: 'address',\n  name: 'verifyingContract'\n}]; // This function returns the types structure for signing off-chain messages according to EIP-712\n\nfunction getEip712MessageTypes(safeVersion) {\n  const eip712WithChainId = (0, satisfies_1.default)(safeVersion, EQ_OR_GT_1_3_0);\n  return {\n    EIP712Domain: eip712WithChainId ? exports.EIP712_DOMAIN : exports.EIP712_DOMAIN_BEFORE_V130,\n    SafeTx: [{\n      type: 'address',\n      name: 'to'\n    }, {\n      type: 'uint256',\n      name: 'value'\n    }, {\n      type: 'bytes',\n      name: 'data'\n    }, {\n      type: 'uint8',\n      name: 'operation'\n    }, {\n      type: 'uint256',\n      name: 'safeTxGas'\n    }, {\n      type: 'uint256',\n      name: 'baseGas'\n    }, {\n      type: 'uint256',\n      name: 'gasPrice'\n    }, {\n      type: 'address',\n      name: 'gasToken'\n    }, {\n      type: 'address',\n      name: 'refundReceiver'\n    }, {\n      type: 'uint256',\n      name: 'nonce'\n    }]\n  };\n}\n\nexports.getEip712MessageTypes = getEip712MessageTypes;\n\nfunction generateTypedData(_ref) {\n  let {\n    safeAddress,\n    safeVersion,\n    chainId,\n    safeTransactionData\n  } = _ref;\n  const eip712WithChainId = (0, satisfies_1.default)(safeVersion, EQ_OR_GT_1_3_0);\n  const typedData = {\n    types: getEip712MessageTypes(safeVersion),\n    domain: {\n      verifyingContract: safeAddress\n    },\n    primaryType: 'SafeTx',\n    message: { ...safeTransactionData,\n      value: safeTransactionData.value,\n      safeTxGas: safeTransactionData.safeTxGas,\n      baseGas: safeTransactionData.baseGas,\n      gasPrice: safeTransactionData.gasPrice,\n      nonce: safeTransactionData.nonce\n    }\n  };\n\n  if (eip712WithChainId) {\n    typedData.domain.chainId = chainId;\n  }\n\n  return typedData;\n}\n\nexports.generateTypedData = generateTypedData; //# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script"}