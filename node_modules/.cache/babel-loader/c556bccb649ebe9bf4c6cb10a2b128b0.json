{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _ContractManager_contractNetworks, _ContractManager_isL1SafeMasterCopy, _ContractManager_safeContract, _ContractManager_multiSendContract, _ContractManager_multiSendCallOnlyContract;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst config_1 = require(\"../contracts/config\");\n\nconst safeDeploymentContracts_1 = require(\"../contracts/safeDeploymentContracts\");\n\nclass ContractManager {\n  constructor() {\n    _ContractManager_contractNetworks.set(this, void 0);\n\n    _ContractManager_isL1SafeMasterCopy.set(this, void 0);\n\n    _ContractManager_safeContract.set(this, void 0);\n\n    _ContractManager_multiSendContract.set(this, void 0);\n\n    _ContractManager_multiSendCallOnlyContract.set(this, void 0);\n  }\n\n  static async create(_ref) {\n    let {\n      ethAdapter,\n      safeAddress,\n      isL1SafeMasterCopy,\n      contractNetworks\n    } = _ref;\n    const contractManager = new ContractManager();\n    await contractManager.init({\n      ethAdapter,\n      safeAddress,\n      isL1SafeMasterCopy,\n      contractNetworks\n    });\n    return contractManager;\n  }\n\n  async init(_ref2) {\n    let {\n      ethAdapter,\n      safeAddress,\n      isL1SafeMasterCopy,\n      contractNetworks\n    } = _ref2;\n    const chainId = await ethAdapter.getChainId();\n    const customContracts = contractNetworks === null || contractNetworks === void 0 ? void 0 : contractNetworks[chainId];\n\n    __classPrivateFieldSet(this, _ContractManager_contractNetworks, contractNetworks, \"f\");\n\n    __classPrivateFieldSet(this, _ContractManager_isL1SafeMasterCopy, isL1SafeMasterCopy, \"f\");\n\n    const temporarySafeContract = await (0, safeDeploymentContracts_1.getSafeContract)({\n      ethAdapter,\n      safeVersion: config_1.SAFE_LAST_VERSION,\n      chainId,\n      isL1SafeMasterCopy,\n      customSafeAddress: safeAddress,\n      customContracts\n    });\n    const safeVersion = await temporarySafeContract.getVersion();\n\n    __classPrivateFieldSet(this, _ContractManager_safeContract, await (0, safeDeploymentContracts_1.getSafeContract)({\n      ethAdapter,\n      safeVersion,\n      chainId,\n      isL1SafeMasterCopy,\n      customSafeAddress: safeAddress,\n      customContracts\n    }), \"f\");\n\n    __classPrivateFieldSet(this, _ContractManager_multiSendContract, await (0, safeDeploymentContracts_1.getMultiSendContract)({\n      ethAdapter,\n      safeVersion,\n      chainId,\n      customContracts\n    }), \"f\");\n\n    __classPrivateFieldSet(this, _ContractManager_multiSendCallOnlyContract, await (0, safeDeploymentContracts_1.getMultiSendCallOnlyContract)({\n      ethAdapter,\n      safeVersion,\n      chainId,\n      customContracts\n    }), \"f\");\n  }\n\n  get contractNetworks() {\n    return __classPrivateFieldGet(this, _ContractManager_contractNetworks, \"f\");\n  }\n\n  get isL1SafeMasterCopy() {\n    return __classPrivateFieldGet(this, _ContractManager_isL1SafeMasterCopy, \"f\");\n  }\n\n  get safeContract() {\n    return __classPrivateFieldGet(this, _ContractManager_safeContract, \"f\");\n  }\n\n  get multiSendContract() {\n    return __classPrivateFieldGet(this, _ContractManager_multiSendContract, \"f\");\n  }\n\n  get multiSendCallOnlyContract() {\n    return __classPrivateFieldGet(this, _ContractManager_multiSendCallOnlyContract, \"f\");\n  }\n\n}\n\n_ContractManager_contractNetworks = new WeakMap(), _ContractManager_isL1SafeMasterCopy = new WeakMap(), _ContractManager_safeContract = new WeakMap(), _ContractManager_multiSendContract = new WeakMap(), _ContractManager_multiSendCallOnlyContract = new WeakMap();\nexports.default = ContractManager; //# sourceMappingURL=contractManager.js.map","map":null,"metadata":{},"sourceType":"script"}