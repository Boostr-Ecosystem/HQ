{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeMultiSendData = exports.standardizeSafeTransactionData = exports.standardizeMetaTransactionData = void 0;\n\nconst bytes_1 = require(\"@ethersproject/bytes\");\n\nconst solidity_1 = require(\"@ethersproject/solidity\");\n\nconst safe_core_sdk_types_1 = require(\"@safe-global/safe-core-sdk-types\");\n\nconst safe_core_sdk_utils_1 = require(\"@safe-global/safe-core-sdk-utils\");\n\nconst constants_1 = require(\"../constants\");\n\nconst gas_1 = require(\"./gas\");\n\nfunction standardizeMetaTransactionData(tx) {\n  var _a;\n\n  const standardizedTxs = { ...tx,\n    operation: (_a = tx.operation) !== null && _a !== void 0 ? _a : safe_core_sdk_types_1.OperationType.Call\n  };\n  return standardizedTxs;\n}\n\nexports.standardizeMetaTransactionData = standardizeMetaTransactionData;\n\nasync function standardizeSafeTransactionData(safeContract, ethAdapter, tx) {\n  var _a, _b, _c, _d;\n\n  const standardizedTxs = {\n    to: tx.to,\n    value: tx.value,\n    data: tx.data,\n    operation: (_a = tx.operation) !== null && _a !== void 0 ? _a : safe_core_sdk_types_1.OperationType.Call,\n    baseGas: (_b = tx.baseGas) !== null && _b !== void 0 ? _b : 0,\n    gasPrice: (_c = tx.gasPrice) !== null && _c !== void 0 ? _c : 0,\n    gasToken: tx.gasToken || constants_1.ZERO_ADDRESS,\n    refundReceiver: tx.refundReceiver || constants_1.ZERO_ADDRESS,\n    nonce: (_d = tx.nonce) !== null && _d !== void 0 ? _d : await safeContract.getNonce()\n  };\n  let safeTxGas;\n\n  if (typeof tx.safeTxGas !== 'undefined') {\n    return { ...standardizedTxs,\n      safeTxGas: tx.safeTxGas\n    };\n  }\n\n  const safeVersion = await safeContract.getVersion();\n\n  if ((0, safe_core_sdk_utils_1.hasSafeFeature)(safe_core_sdk_utils_1.SAFE_FEATURES.SAFE_TX_GAS_OPTIONAL, safeVersion) && standardizedTxs.gasPrice === 0) {\n    safeTxGas = 0;\n  } else {\n    safeTxGas = await (0, gas_1.estimateTxGas)(safeContract, ethAdapter, standardizedTxs.to, standardizedTxs.value, standardizedTxs.data, standardizedTxs.operation);\n  }\n\n  return { ...standardizedTxs,\n    safeTxGas\n  };\n}\n\nexports.standardizeSafeTransactionData = standardizeSafeTransactionData;\n\nfunction encodeMetaTransaction(tx) {\n  const data = (0, bytes_1.arrayify)(tx.data);\n  const encoded = (0, solidity_1.pack)(['uint8', 'address', 'uint256', 'uint256', 'bytes'], [tx.operation, tx.to, tx.value, data.length, data]);\n  return encoded.slice(2);\n}\n\nfunction encodeMultiSendData(txs) {\n  return '0x' + txs.map(tx => encodeMetaTransaction(tx)).join('');\n}\n\nexports.encodeMultiSendData = encodeMultiSendData; //# sourceMappingURL=utils.js.map","map":null,"metadata":{},"sourceType":"script"}