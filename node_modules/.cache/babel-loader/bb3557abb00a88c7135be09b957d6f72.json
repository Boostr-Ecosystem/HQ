{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.estimateTxGas = void 0;\n\nconst bignumber_1 = require(\"@ethersproject/bignumber\");\n\nconst safe_core_sdk_types_1 = require(\"@safe-global/safe-core-sdk-types\");\n\nfunction estimateDataGasCosts(data) {\n  const reducer = (accumulator, currentValue) => {\n    if (currentValue === '0x') {\n      return accumulator + 0;\n    }\n\n    if (currentValue === '00') {\n      return accumulator + 4;\n    }\n\n    return accumulator + 16;\n  };\n\n  return data.match(/.{2}/g).reduce(reducer, 0);\n}\n\nasync function estimateTxGas(safeContract, ethAdapter, to, valueInWei, data, operation) {\n  let txGasEstimation = 0;\n  const safeAddress = safeContract.getAddress();\n  const estimateData = safeContract.encode('requiredTxGas', [to, valueInWei, data, operation]);\n\n  try {\n    const estimateResponse = (await ethAdapter.estimateGas({\n      to: safeAddress,\n      from: safeAddress,\n      data: estimateData\n    })).toString();\n    txGasEstimation = bignumber_1.BigNumber.from('0x' + estimateResponse.substring(138)).toNumber() + 10000;\n  } catch (error) {}\n\n  if (txGasEstimation > 0) {\n    const dataGasEstimation = estimateDataGasCosts(estimateData);\n    let additionalGas = 10000;\n\n    for (let i = 0; i < 10; i++) {\n      try {\n        const estimateResponse = await ethAdapter.call({\n          to: safeAddress,\n          from: safeAddress,\n          data: estimateData,\n          gasPrice: 0,\n          gasLimit: txGasEstimation + dataGasEstimation + additionalGas\n        });\n\n        if (estimateResponse !== '0x') {\n          break;\n        }\n      } catch (error) {}\n\n      txGasEstimation += additionalGas;\n      additionalGas *= 2;\n    }\n\n    return txGasEstimation + additionalGas;\n  }\n\n  try {\n    const estimateGas = await ethAdapter.estimateGas({\n      to,\n      from: safeAddress,\n      value: valueInWei,\n      data\n    });\n    return estimateGas;\n  } catch (error) {\n    if (operation === safe_core_sdk_types_1.OperationType.DelegateCall) {\n      return 0;\n    }\n\n    return Promise.reject(error);\n  }\n}\n\nexports.estimateTxGas = estimateTxGas; //# sourceMappingURL=gas.js.map","map":null,"metadata":{},"sourceType":"script"}