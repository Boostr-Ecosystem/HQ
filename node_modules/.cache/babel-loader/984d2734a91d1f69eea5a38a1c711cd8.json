{"ast":null,"code":"import { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { W as WagmiAdapter } from '../../../../dist/tw-connector-443c384d.browser.esm.js';\nimport { a as AbstractBrowserWallet } from '../../../../dist/base-26952412.browser.esm.js';\nimport { Buffer } from 'buffer';\nimport 'eventemitter3';\nimport '../../../../dist/classPrivateMethodGet-9d546189.browser.esm.js';\nimport '../../../../dist/checkPrivateRedeclaration-3aaaa21d.browser.esm.js';\nimport '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nimport 'ethers';\nimport '@thirdweb-dev/chains';\n{\n  // Coinbase SDK uses Buffer for rendering the QRCode which requires a global polyfill\n  window.Buffer = Buffer;\n}\n\nclass CoinbaseWallet extends AbstractBrowserWallet {\n  get walletName() {\n    return \"Coinbase Wallet\";\n  }\n\n  constructor(options) {\n    super(CoinbaseWallet.id, options);\n\n    _defineProperty(this, \"connector\", void 0);\n\n    _defineProperty(this, \"coinbaseConnector\", void 0);\n\n    _defineProperty(this, \"headlessMode\", void 0);\n\n    this.headlessMode = options?.headlessMode || false;\n  }\n\n  async getConnector() {\n    if (!this.connector) {\n      // import the connector dynamically\n      const {\n        CoinbaseWalletConnector\n      } = await import('../../../connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js');\n      const cbConnector = new CoinbaseWalletConnector({\n        chains: this.chains,\n        options: {\n          appName: this.dappMetadata.name,\n          reloadOnDisconnect: false,\n          darkMode: this.dappMetadata.isDarkMode,\n          headlessMode: this.headlessMode\n        }\n      });\n      cbConnector.on(\"connect\", () => {});\n      this.coinbaseConnector = cbConnector;\n      this.connector = new WagmiAdapter(cbConnector);\n    }\n\n    return this.connector;\n  }\n\n  async getQrUrl() {\n    await this.getConnector();\n\n    if (!this.coinbaseConnector) {\n      throw new Error(\"Coinbase connector not initialized\");\n    }\n\n    return this.coinbaseConnector.getQrUrl();\n  }\n\n}\n\n_defineProperty(CoinbaseWallet, \"meta\", {\n  iconURL: \"ipfs://QmcJBHopbwfJcLqJpX2xEufSS84aLbF7bHavYhaXUcrLaH/coinbase.svg\",\n  name: \"Coinbase Wallet\"\n});\n\n_defineProperty(CoinbaseWallet, \"id\", \"coinbaseWallet\");\n\nexport { CoinbaseWallet };","map":null,"metadata":{},"sourceType":"module"}