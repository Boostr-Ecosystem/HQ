{"ast":null,"code":"'use strict';\n\nconst {\n  UnixFS\n} = require('ipfs-unixfs');\n\nconst persist = require('../../utils/persist');\n\nconst {\n  DAGNode\n} = require('ipld-dag-pb');\n/**\n * @typedef {import('../../types').BufferImporter} BufferImporter\n */\n\n/**\n * @type {BufferImporter}\n */\n\n\nasync function* bufferImporter(file, block, options) {\n  for await (let buffer of file.content) {\n    yield async () => {\n      options.progress(buffer.length, file.path);\n      let unixfs;\n      /** @type {import('../../types').PersistOptions} */\n\n      const opts = {\n        codec: 'dag-pb',\n        cidVersion: options.cidVersion,\n        hashAlg: options.hashAlg,\n        onlyHash: options.onlyHash\n      };\n\n      if (options.rawLeaves) {\n        opts.codec = 'raw';\n        opts.cidVersion = 1;\n      } else {\n        unixfs = new UnixFS({\n          type: options.leafType,\n          data: buffer,\n          mtime: file.mtime,\n          mode: file.mode\n        });\n        buffer = new DAGNode(unixfs.marshal()).serialize();\n      }\n\n      return {\n        cid: await persist(buffer, block, opts),\n        unixfs,\n        size: buffer.length\n      };\n    };\n  }\n}\n\nmodule.exports = bufferImporter;","map":null,"metadata":{},"sourceType":"script"}