{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst constants_1 = require(\"../../../utils/constants\");\n\nconst utils_1 = require(\"../../../utils\");\n\nconst GnosisSafeContractEthers_1 = __importDefault(require(\"../GnosisSafeContractEthers\"));\n\nclass GnosisSafeContract_V1_0_0_Ethers extends GnosisSafeContractEthers_1.default {\n  constructor(contract) {\n    super(contract);\n    this.contract = contract;\n  }\n\n  async setup(setupConfig, options) {\n    const {\n      owners,\n      threshold,\n      to = constants_1.ZERO_ADDRESS,\n      data = constants_1.EMPTY_DATA,\n      paymentToken = constants_1.ZERO_ADDRESS,\n      payment = 0,\n      paymentReceiver = constants_1.ZERO_ADDRESS\n    } = setupConfig;\n\n    if (options && !options.gasLimit) {\n      options.gasLimit = await this.estimateGas('setup', [owners, threshold, to, data, paymentToken, payment, paymentReceiver], { ...options\n      });\n    }\n\n    const txResponse = await this.contract.setup(owners, threshold, to, data, paymentToken, payment, paymentReceiver, options);\n    return (0, utils_1.toTxResult)(txResponse, options);\n  }\n\n  async getModules() {\n    return this.contract.getModules();\n  }\n\n  async isModuleEnabled(moduleAddress) {\n    const modules = await this.getModules();\n    const isModuleEnabled = modules.some(enabledModuleAddress => (0, utils_1.sameString)(enabledModuleAddress, moduleAddress));\n    return isModuleEnabled;\n  }\n\n}\n\nexports.default = GnosisSafeContract_V1_0_0_Ethers; //# sourceMappingURL=GnosisSafeContract_V1_0_0_Ethers.js.map","map":null,"metadata":{},"sourceType":"script"}