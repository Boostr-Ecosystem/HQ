{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapReceipt = exports.createLibInterface = exports.createLibAddress = exports.createLibDeployment = void 0;\n\nconst abi_1 = require(\"@ethersproject/abi\");\n\nconst address_1 = require(\"@ethersproject/address\");\n\nconst safe_deployments_1 = require(\"@gnosis.pm/safe-deployments\");\n\nexports.createLibDeployment = (0, safe_deployments_1.getCreateCallDeployment)();\nexports.createLibAddress = exports.createLibDeployment.defaultAddress;\nexports.createLibInterface = new abi_1.Interface(exports.createLibDeployment.abi);\n\nconst mapStatus = receipt => {\n  // Search for ExecutionSuccess event (see https://github.com/safe-global/safe-contracts/blob/v1.3.0/contracts/GnosisSafe.sol#L49)\n  const success = receipt.logs.find(log => log.topics[0] === '0x442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e');\n  return !!success ? 1 : 0;\n};\n\nconst mapContractAddress = (receipt, safeTx) => {\n  if (safeTx.to.toLowerCase() === exports.createLibAddress.toLowerCase()) {\n    // Search for ContractCreation event (see https://github.com/safe-global/safe-contracts/blob/v1.3.0/contracts/libraries/CreateCall.sol#L7)\n    const creationLog = receipt.logs.find(log => log.topics[0] === '0x4db17dd5e4732fb6da34a148104a592783ca119a1e7bb8829eba6cbadef0b511');\n    if (creationLog) return (0, address_1.getAddress)('0x' + creationLog.data.slice(creationLog.data.length - 40));\n  }\n\n  return receipt.contractAddress;\n};\n\nconst mapReceipt = (receipt, safeTx) => {\n  // Update status with Safe tx status and extract created contract\n  receipt.status = mapStatus(receipt);\n  receipt.contractAddress = mapContractAddress(receipt, safeTx);\n  return receipt;\n};\n\nexports.mapReceipt = mapReceipt; //# sourceMappingURL=utils.js.map","map":null,"metadata":{},"sourceType":"script"}