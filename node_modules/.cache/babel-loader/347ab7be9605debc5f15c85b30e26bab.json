{"ast":null,"code":"import { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { a as AbstractBrowserWallet, c as createAsyncLocalStorage } from '../../../../dist/base-26952412.browser.esm.js';\nimport { W as WagmiAdapter } from '../../../../dist/tw-connector-443c384d.browser.esm.js';\nimport '../../../../dist/classPrivateMethodGet-9d546189.browser.esm.js';\nimport '../../../../dist/checkPrivateRedeclaration-3aaaa21d.browser.esm.js';\nimport '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nimport 'ethers';\nimport 'eventemitter3';\nimport '@thirdweb-dev/chains';\n\nclass InjectedWallet extends AbstractBrowserWallet {\n  get walletName() {\n    return \"Injected Wallet\";\n  }\n\n  constructor(options) {\n    super(InjectedWallet.id, options);\n\n    _defineProperty(this, \"connector\", void 0);\n\n    _defineProperty(this, \"connectorStorage\", void 0);\n\n    this.connectorStorage = options.connectorStorage || createAsyncLocalStorage(\"connector\");\n  }\n\n  async getConnector() {\n    if (!this.connector) {\n      // import the connector dynamically\n      const {\n        InjectedConnector\n      } = await import('../../../connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js');\n      this.connector = new WagmiAdapter(new InjectedConnector({\n        chains: this.chains,\n        connectorStorage: this.connectorStorage,\n        options: {\n          shimDisconnect: true\n        }\n      }));\n    }\n\n    return this.connector;\n  }\n\n}\n\n_defineProperty(InjectedWallet, \"id\", \"injected\");\n\nexport { InjectedWallet };","map":null,"metadata":{},"sourceType":"module"}