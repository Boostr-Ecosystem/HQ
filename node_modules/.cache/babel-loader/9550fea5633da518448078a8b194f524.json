{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _SafeFactory_contractNetworks, _SafeFactory_isL1SafeMasterCopy, _SafeFactory_safeVersion, _SafeFactory_ethAdapter, _SafeFactory_safeProxyFactoryContract, _SafeFactory_gnosisSafeContract;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nconst satisfies_1 = __importDefault(require(\"semver/functions/satisfies\"));\n\nconst config_1 = require(\"../contracts/config\");\n\nconst safeDeploymentContracts_1 = require(\"../contracts/safeDeploymentContracts\");\n\nconst Safe_1 = __importDefault(require(\"../Safe\"));\n\nconst constants_1 = require(\"../utils/constants\");\n\nconst utils_1 = require(\"./utils\");\n\nclass SafeFactory {\n  constructor() {\n    _SafeFactory_contractNetworks.set(this, void 0);\n\n    _SafeFactory_isL1SafeMasterCopy.set(this, void 0);\n\n    _SafeFactory_safeVersion.set(this, void 0);\n\n    _SafeFactory_ethAdapter.set(this, void 0);\n\n    _SafeFactory_safeProxyFactoryContract.set(this, void 0);\n\n    _SafeFactory_gnosisSafeContract.set(this, void 0);\n  }\n\n  static async create(_ref) {\n    let {\n      ethAdapter,\n      safeVersion = config_1.SAFE_LAST_VERSION,\n      isL1SafeMasterCopy = false,\n      contractNetworks\n    } = _ref;\n    const safeFactorySdk = new SafeFactory();\n    await safeFactorySdk.init({\n      ethAdapter,\n      safeVersion,\n      isL1SafeMasterCopy,\n      contractNetworks\n    });\n    return safeFactorySdk;\n  }\n\n  async init(_ref2) {\n    let {\n      ethAdapter,\n      safeVersion,\n      isL1SafeMasterCopy,\n      contractNetworks\n    } = _ref2;\n\n    __classPrivateFieldSet(this, _SafeFactory_ethAdapter, ethAdapter, \"f\");\n\n    __classPrivateFieldSet(this, _SafeFactory_safeVersion, safeVersion, \"f\");\n\n    __classPrivateFieldSet(this, _SafeFactory_isL1SafeMasterCopy, isL1SafeMasterCopy, \"f\");\n\n    __classPrivateFieldSet(this, _SafeFactory_contractNetworks, contractNetworks, \"f\");\n\n    const chainId = await __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").getChainId();\n    const customContracts = contractNetworks === null || contractNetworks === void 0 ? void 0 : contractNetworks[chainId];\n\n    __classPrivateFieldSet(this, _SafeFactory_safeProxyFactoryContract, await (0, safeDeploymentContracts_1.getProxyFactoryContract)({\n      ethAdapter,\n      safeVersion,\n      chainId,\n      customContracts\n    }), \"f\");\n\n    __classPrivateFieldSet(this, _SafeFactory_gnosisSafeContract, await (0, safeDeploymentContracts_1.getSafeContract)({\n      ethAdapter,\n      safeVersion,\n      chainId,\n      isL1SafeMasterCopy,\n      customContracts\n    }), \"f\");\n  }\n\n  getEthAdapter() {\n    return __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\");\n  }\n\n  getSafeVersion() {\n    return __classPrivateFieldGet(this, _SafeFactory_safeVersion, \"f\");\n  }\n\n  getAddress() {\n    return __classPrivateFieldGet(this, _SafeFactory_safeProxyFactoryContract, \"f\").getAddress();\n  }\n\n  async getChainId() {\n    return __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").getChainId();\n  }\n\n  async encodeSetupCallData(_ref3) {\n    let {\n      owners,\n      threshold,\n      to = constants_1.ZERO_ADDRESS,\n      data = constants_1.EMPTY_DATA,\n      fallbackHandler,\n      paymentToken = constants_1.ZERO_ADDRESS,\n      payment = 0,\n      paymentReceiver = constants_1.ZERO_ADDRESS\n    } = _ref3;\n\n    var _a;\n\n    if ((0, satisfies_1.default)(__classPrivateFieldGet(this, _SafeFactory_safeVersion, \"f\"), '<=1.0.0')) {\n      return __classPrivateFieldGet(this, _SafeFactory_gnosisSafeContract, \"f\").encode('setup', [owners, threshold, to, data, paymentToken, payment, paymentReceiver]);\n    }\n\n    let fallbackHandlerAddress;\n\n    if (fallbackHandler) {\n      fallbackHandlerAddress = fallbackHandler;\n    } else {\n      const chainId = await __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").getChainId();\n      const customContracts = (_a = __classPrivateFieldGet(this, _SafeFactory_contractNetworks, \"f\")) === null || _a === void 0 ? void 0 : _a[chainId];\n      const fallbackHandlerContract = await (0, safeDeploymentContracts_1.getCompatibilityFallbackHandlerContract)({\n        ethAdapter: __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\"),\n        safeVersion: __classPrivateFieldGet(this, _SafeFactory_safeVersion, \"f\"),\n        chainId,\n        customContracts\n      });\n      fallbackHandlerAddress = fallbackHandlerContract.getAddress();\n    }\n\n    return __classPrivateFieldGet(this, _SafeFactory_gnosisSafeContract, \"f\").encode('setup', [owners, threshold, to, data, fallbackHandlerAddress, paymentToken, payment, paymentReceiver]);\n  }\n\n  async predictSafeAddress(_ref4) {\n    let {\n      safeAccountConfig,\n      safeDeploymentConfig\n    } = _ref4;\n    (0, utils_1.validateSafeAccountConfig)(safeAccountConfig);\n    (0, utils_1.validateSafeDeploymentConfig)(safeDeploymentConfig);\n\n    const from = __classPrivateFieldGet(this, _SafeFactory_safeProxyFactoryContract, \"f\").getAddress();\n\n    const initializer = await this.encodeSetupCallData(safeAccountConfig);\n    const saltNonce = safeDeploymentConfig.saltNonce;\n    const encodedNonce = (0, ethereumjs_util_1.toBuffer)(__classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").encodeParameters(['uint256'], [saltNonce])).toString('hex');\n    const salt = (0, ethereumjs_util_1.keccak256)((0, ethereumjs_util_1.toBuffer)('0x' + (0, ethereumjs_util_1.keccak256)((0, ethereumjs_util_1.toBuffer)(initializer)).toString('hex') + encodedNonce));\n    const proxyCreationCode = await __classPrivateFieldGet(this, _SafeFactory_safeProxyFactoryContract, \"f\").proxyCreationCode();\n    const constructorData = (0, ethereumjs_util_1.toBuffer)(__classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").encodeParameters(['address'], [__classPrivateFieldGet(this, _SafeFactory_gnosisSafeContract, \"f\").getAddress()])).toString('hex');\n    const initCode = proxyCreationCode + constructorData;\n    const proxyAddress = '0x' + (0, ethereumjs_util_1.generateAddress2)((0, ethereumjs_util_1.toBuffer)(from), (0, ethereumjs_util_1.toBuffer)(salt), (0, ethereumjs_util_1.toBuffer)(initCode)).toString('hex');\n    return __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").getChecksummedAddress(proxyAddress);\n  }\n\n  async deploySafe(_ref5) {\n    let {\n      safeAccountConfig,\n      safeDeploymentConfig,\n      options,\n      callback\n    } = _ref5;\n\n    var _a;\n\n    (0, utils_1.validateSafeAccountConfig)(safeAccountConfig);\n\n    if (safeDeploymentConfig) {\n      (0, utils_1.validateSafeDeploymentConfig)(safeDeploymentConfig);\n    }\n\n    const signerAddress = await __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").getSignerAddress();\n\n    if (!signerAddress) {\n      throw new Error('EthAdapter must be initialized with a signer to use this method');\n    }\n\n    const initializer = await this.encodeSetupCallData(safeAccountConfig);\n    const saltNonce = (_a = safeDeploymentConfig === null || safeDeploymentConfig === void 0 ? void 0 : safeDeploymentConfig.saltNonce) !== null && _a !== void 0 ? _a : (Date.now() * 1000 + Math.floor(Math.random() * 1000)).toString();\n\n    if ((options === null || options === void 0 ? void 0 : options.gas) && (options === null || options === void 0 ? void 0 : options.gasLimit)) {\n      throw new Error('Cannot specify gas and gasLimit together in transaction options');\n    }\n\n    const safeAddress = await __classPrivateFieldGet(this, _SafeFactory_safeProxyFactoryContract, \"f\").createProxy({\n      safeMasterCopyAddress: __classPrivateFieldGet(this, _SafeFactory_gnosisSafeContract, \"f\").getAddress(),\n      initializer,\n      saltNonce,\n      options: {\n        from: signerAddress,\n        ...options\n      },\n      callback\n    });\n    const isContractDeployed = await __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").isContractDeployed(safeAddress);\n\n    if (!isContractDeployed) {\n      throw new Error('SafeProxy contract is not deployed on the current network');\n    }\n\n    const safe = await Safe_1.default.create({\n      ethAdapter: __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\"),\n      safeAddress,\n      isL1SafeMasterCopy: __classPrivateFieldGet(this, _SafeFactory_isL1SafeMasterCopy, \"f\"),\n      contractNetworks: __classPrivateFieldGet(this, _SafeFactory_contractNetworks, \"f\")\n    });\n    return safe;\n  }\n\n}\n\n_SafeFactory_contractNetworks = new WeakMap(), _SafeFactory_isL1SafeMasterCopy = new WeakMap(), _SafeFactory_safeVersion = new WeakMap(), _SafeFactory_ethAdapter = new WeakMap(), _SafeFactory_safeProxyFactoryContract = new WeakMap(), _SafeFactory_gnosisSafeContract = new WeakMap();\nexports.default = SafeFactory; //# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script"}